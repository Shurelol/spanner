port: 7890 # http代理端口
socks-port: 7891 # socks5代理端口
allow-lan: true
mode: Rule 
log-level: info
external-controller: :9090 # 管理端口，可用yacd等面板管理
#---------------------------------------------------#
# 节点在此设置，添加数量不限
proxies:
  - {name: 节点1, server: , port: , type: vmess, uuid: , alterId: 0, cipher: auto, tls: true, skip-cert-verify: false}
  - {name: 节点2, server: , port: , type: vmess, uuid: , alterId: 0, cipher: auto, tls: true, skip-cert-verify: false}
# 代理提供商在此设置，添加数量不限
# airport1，airport2可改为具体名称
proxy-providers:
  airport1: # 机场1
    type: http # 代理类型
    path: ./profiles/airport1.yml # 机场订阅链接下载节点配置文件保存地址
    url:  # 机场订阅链接，需通过机场提供的转换网站转换，在浏览器中能显示节点列表
    interval: 36000
    health-check: # 延迟检查
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 3600

  airport2: # 机场2
    type: http
    path: ./profiles/airport2.yml
    url:
    interval: 36000
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 3600
#---------------------------------------------------#
# 代理群组在此设置，提供故障转移和自动选择（根据延迟）
# AIRPORT1，AIRPORT2可改为具体名称
proxy-groups:
  - name: PROXY
    type: select
    proxies:
      - 故障转移
      - 自动选择
      - AIRPORT1 # 机场1代理群
      - AIRPORT2 # 机场2代理群
      - 节点1
      - 节点2

  - name: AIRPORT1 # 机场1代理群
    type: select
    use:
      - airport1

  - name: AIRPORT2 # 机场2代理群
    type: select
    use:
      - airport2

  - name: 故障转移
    type: fallback
    url: 'http://www.gstatic.com/generate_204'
    interval: 7200
    proxies:
      - AIRPORT1 # 机场1代理群
      - AIRPORT2 # 机场2代理群

  - name: 自动选择
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    proxies:
      - 节点1
      - 节点2
    use:
      - airport1 # 机场1
      - airport2 # 机场2
#---------------------------------------------------#
# 规则集在此设置，添加数量不限，注意规则集的behavior和格式对应
rule-providers:
# 可参考添加自己的rule-set规则集
  mydirect:
    type: http
    behavior: classical
    url: https://raw.githubusercontent.com/Shurelol/spanner/main/Clash/rule-set/dirxct.txt
    path: ./ruleset/mydirect.yaml
    interval: 300

  myproxy:
    type: http
    behavior: classical
    url: https://raw.githubusercontent.com/Shurelol/spanner/main/Clash/rule-set/proxy.txt
    path: ./ruleset/myproxy.yaml
    interval: 300

# 规则提供商在此设置，默认采用https://github.com/Loyalsoldier/clash-rules
  reject:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 86400

  icloud:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt"
    path: ./ruleset/icloud.yaml
    interval: 86400

  apple:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt"
    path: ./ruleset/apple.yaml
    interval: 86400

  google:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt"
    path: ./ruleset/google.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt"
    path: ./ruleset/proxy.yaml
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt"
    path: ./ruleset/direct.yaml
    interval: 86400

  private:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt"
    path: ./ruleset/private.yaml
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt"
    path: ./ruleset/gfw.yaml
    interval: 86400

  greatfire:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/greatfire.txt"
    path: ./ruleset/greatfire.yaml
    interval: 86400

  tld-not-cn:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt"
    path: ./ruleset/applications.yaml
    interval: 86400

#---------------------------------------------------#
rules:
  # 自定义规则在此设置
  - DOMAIN-KEYWORD,onedrive,DIRECT
  - DOMAIN-SUFFIX,themoviedb.org,PROXY
  - DOMAIN,yacd.haishan.me,DIRECT
  # 下面的规则是通过上面的rule-provider来确定的
  # 黑白名单模式二选其一，删除另外一种
  # 黑名单模式（只有命中规则的网络流量，才使用代理）
  - RULE-SET,applications,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,REJECT
  - RULE-SET,tld-not-cn,PROXY
  - RULE-SET,gfw,PROXY
  - RULE-SET,greatfire,PROXY
  - RULE-SET,telegramcidr,PROXY
  - MATCH,DIRECT
  # 白名单模式（没有命中规则的网络流量，统统使用代理）
  - RULE-SET,applications,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,REJECT
  - RULE-SET,icloud,DIRECT
  - RULE-SET,apple,DIRECT
  - RULE-SET,google,DIRECT
  - RULE-SET,proxy,PROXY
  - RULE-SET,direct,DIRECT
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,telegramcidr,PROXY
  - GEOIP,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,PROXY
